services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: CosmoDB
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks: 
      - pipeline_prod_network

  backend:
    image: kei077/cosmo-backend:latest   
    environment:
      DATABASE_USERNAME: ${DB_USER}
      DATABASE_PASSWORD: ${DB_PASS}
    ports:
      - "8081:8081"
    depends_on: 
      - postgres
    networks: 
      - pipeline_prod_network

  frontend:
    image: kei077/cosmo-frontend:latest    
    ports:
      - "5173:80"
    depends_on: 
      - backend
    networks: 
      - pipeline_prod_network

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/
    ports: ["9090:9090"]
    networks: 
      - pipeline_prod_network

  grafana:
    image: grafana/grafana
    ports: ["3000:3000"]
    depends_on: 
      - prometheus
    volumes:
      - grafana_data:/var/lib/grafana
    networks: 
      - pipeline_prod_network
  
  sonarqube:
    image: sonarqube:lts
    container_name: sonarqube
    ports:
      - "9000:9000"
    networks:
      - pipeline_prod_network
    environment:
      - SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions


volumes:
  postgres_data:
  grafana_data:
  sonarqube_data:
  sonarqube_extensions:

networks:
  pipeline_prod_network:
